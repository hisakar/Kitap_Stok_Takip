create or replace NONEDITIONABLE TRIGGER BooksAuditTrigger
BEFORE INSERT OR UPDATE OR DELETE ON Books
FOR EACH ROW
DECLARE 
    l_date varchar(50);
BEGIN
    SELECT TO_CHAR(sysdate,'DD/MM/YYYY HH24:MI:SS') INTO l_date FROM Dual;
    IF INSERTING THEN
        INSERT INTO BOOK_LOG(LOG_TYPE,NEW_NAME, NEW_WRITER, NEW_PRICE, NEW_STOCK_AMOUNT, NEW_BARCODE, NEW_CATEGORY_ID, OLD_NAME, OLD_WRITER, OLD_PRICE, OLD_STOCK_AMOUNT, OLD_BARCODE, OLD_CATEGORY_ID, LOG_DATE) 
            VALUES('Kitap Ekleme', :NEW.BOOK_NAME, :NEW.WRITER, :NEW.PRICE, :NEW.STOCK_AMOUNT, :NEW.BARCODE, :NEW.CATEGORY_ID, NULL, NULL, NULL, NULL, NULL, NULL, l_date);
    ELSIF UPDATING THEN
        INSERT INTO BOOK_LOG(LOG_TYPE,NEW_NAME, NEW_WRITER, NEW_PRICE, NEW_STOCK_AMOUNT, NEW_BARCODE, NEW_CATEGORY_ID, OLD_NAME, OLD_WRITER, OLD_PRICE, OLD_STOCK_AMOUNT, OLD_BARCODE, OLD_CATEGORY_ID, LOG_DATE) 
            VALUES('Kitap GÃ¼ncelleme', :NEW.BOOK_NAME, :NEW.WRITER, :NEW.PRICE, :NEW.STOCK_AMOUNT, :NEW.BARCODE, :NEW.CATEGORY_ID,
                    :OLD.BOOK_NAME, :OLD.WRITER, :OLD.PRICE, :OLD.STOCK_AMOUNT, :OLD.BARCODE, :OLD.CATEGORY_ID, l_date);
    ELSIF DELETING THEN
        INSERT INTO BOOK_LOG(LOG_TYPE,NEW_NAME, NEW_WRITER, NEW_PRICE, NEW_STOCK_AMOUNT, NEW_BARCODE, NEW_CATEGORY_ID, OLD_NAME, OLD_WRITER, OLD_PRICE, OLD_STOCK_AMOUNT, OLD_BARCODE, OLD_CATEGORY_ID, LOG_DATE) 
            VALUES('Kitap Silme', NULL, NULL, NULL, NULL, NULL, NULL, :OLD.BOOK_NAME, :OLD.WRITER, :OLD.PRICE, :OLD.STOCK_AMOUNT, :OLD.BARCODE, :OLD.CATEGORY_ID, l_date);
    END IF;
END;